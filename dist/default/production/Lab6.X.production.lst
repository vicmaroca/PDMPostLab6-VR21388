

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Mar 31 08:20:13 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Version 2.40
    22                           ; Generated 17/11/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     000D                     	;# 
    70     000E                     	;# 
    71     000E                     	;# 
    72     000F                     	;# 
    73     0010                     	;# 
    74     0011                     	;# 
    75     0012                     	;# 
    76     0013                     	;# 
    77     0014                     	;# 
    78     0015                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0017                     	;# 
    82     0018                     	;# 
    83     0019                     	;# 
    84     001A                     	;# 
    85     001B                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001D                     	;# 
    89     001E                     	;# 
    90     001F                     	;# 
    91     0081                     	;# 
    92     0085                     	;# 
    93     0086                     	;# 
    94     0087                     	;# 
    95     0088                     	;# 
    96     0089                     	;# 
    97     008C                     	;# 
    98     008D                     	;# 
    99     008E                     	;# 
   100     008F                     	;# 
   101     0090                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0093                     	;# 
   107     0094                     	;# 
   108     0095                     	;# 
   109     0096                     	;# 
   110     0097                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009A                     	;# 
   114     009B                     	;# 
   115     009C                     	;# 
   116     009D                     	;# 
   117     009E                     	;# 
   118     009F                     	;# 
   119     0105                     	;# 
   120     0107                     	;# 
   121     0108                     	;# 
   122     0109                     	;# 
   123     010C                     	;# 
   124     010C                     	;# 
   125     010D                     	;# 
   126     010E                     	;# 
   127     010F                     	;# 
   128     0185                     	;# 
   129     0187                     	;# 
   130     0188                     	;# 
   131     0189                     	;# 
   132     018C                     	;# 
   133     018D                     	;# 
   134     0000                     	;# 
   135     0001                     	;# 
   136     0002                     	;# 
   137     0003                     	;# 
   138     0004                     	;# 
   139     0005                     	;# 
   140     0006                     	;# 
   141     0007                     	;# 
   142     0008                     	;# 
   143     0009                     	;# 
   144     000A                     	;# 
   145     000B                     	;# 
   146     000C                     	;# 
   147     000D                     	;# 
   148     000E                     	;# 
   149     000E                     	;# 
   150     000F                     	;# 
   151     0010                     	;# 
   152     0011                     	;# 
   153     0012                     	;# 
   154     0013                     	;# 
   155     0014                     	;# 
   156     0015                     	;# 
   157     0015                     	;# 
   158     0016                     	;# 
   159     0017                     	;# 
   160     0018                     	;# 
   161     0019                     	;# 
   162     001A                     	;# 
   163     001B                     	;# 
   164     001B                     	;# 
   165     001C                     	;# 
   166     001D                     	;# 
   167     001E                     	;# 
   168     001F                     	;# 
   169     0081                     	;# 
   170     0085                     	;# 
   171     0086                     	;# 
   172     0087                     	;# 
   173     0088                     	;# 
   174     0089                     	;# 
   175     008C                     	;# 
   176     008D                     	;# 
   177     008E                     	;# 
   178     008F                     	;# 
   179     0090                     	;# 
   180     0091                     	;# 
   181     0092                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0093                     	;# 
   185     0094                     	;# 
   186     0095                     	;# 
   187     0096                     	;# 
   188     0097                     	;# 
   189     0098                     	;# 
   190     0099                     	;# 
   191     009A                     	;# 
   192     009B                     	;# 
   193     009C                     	;# 
   194     009D                     	;# 
   195     009E                     	;# 
   196     009F                     	;# 
   197     0105                     	;# 
   198     0107                     	;# 
   199     0108                     	;# 
   200     0109                     	;# 
   201     010C                     	;# 
   202     010C                     	;# 
   203     010D                     	;# 
   204     010E                     	;# 
   205     010F                     	;# 
   206     0185                     	;# 
   207     0187                     	;# 
   208     0188                     	;# 
   209     0189                     	;# 
   210     018C                     	;# 
   211     018D                     	;# 
   212                           
   213                           	psect	strings
   214     0227                     __pstrings:
   215     0227                     stringtab:
   216     0227                     __stringtab:
   217     0227                     stringcode:	
   218                           ;	String table - string pointers are 1 byte each
   219                           
   220     0227                     stringdir:
   221     0227  3002               	movlw	high stringdir
   222     0228  008A               	movwf	10
   223     0229  0804               	movf	4,w
   224     022A  0A84               	incf	4,f
   225     022B  0782               	addwf	2,f
   226     022C                     __stringbase:
   227     022C  3400               	retlw	0
   228     022D                     __end_of__stringtab:
   229     022D                     _segmentos:
   230     022D  343F               	retlw	63
   231     022E  3406               	retlw	6
   232     022F  345B               	retlw	91
   233     0230  344F               	retlw	79
   234     0231  3466               	retlw	102
   235     0232  346D               	retlw	109
   236     0233  347D               	retlw	125
   237     0234  3407               	retlw	7
   238     0235  347F               	retlw	127
   239     0236  3467               	retlw	103
   240     0237                     __end_of_segmentos:
   241     0006                     _PORTB	set	6
   242     001E                     _ADRESH	set	30
   243     001F                     _ADCON0bits	set	31
   244     0001                     _TMR0	set	1
   245     000B                     _INTCONbits	set	11
   246     0007                     _PORTC	set	7
   247     0008                     _PORTD	set	8
   248     0066                     _ADIF	set	102
   249     005A                     _T0IF	set	90
   250     009F                     _ADCON1bits	set	159
   251     0085                     _TRISAbits	set	133
   252     0081                     _OPTION_REGbits	set	129
   253     008F                     _OSCCONbits	set	143
   254     0088                     _TRISD	set	136
   255     0087                     _TRISC	set	135
   256     0086                     _TRISB	set	134
   257     0188                     _ANSELbits	set	392
   258     0189                     _ANSELH	set	393
   259     0188                     _ANSEL	set	392
   260                           
   261                           	psect	cinit
   262     0013                     start_initialization:	
   263                           ; #config settings
   264                           
   265     0013                     __initialization:
   266                           
   267                           ; Clear objects allocated to COMMON
   268     0013  01F8               	clrf	__pbssCOMMON& (0+127)
   269     0014  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   270                           
   271                           ; Clear objects allocated to BANK0
   272     0015  1283               	bcf	3,5	;RP0=0, select bank0
   273     0016  1303               	bcf	3,6	;RP1=0, select bank0
   274     0017  01AF               	clrf	__pbssBANK0& (0+127)
   275     0018  01B0               	clrf	(__pbssBANK0+1)& (0+127)
   276     0019  01B1               	clrf	(__pbssBANK0+2)& (0+127)
   277     001A  01B2               	clrf	(__pbssBANK0+3)& (0+127)
   278     001B  01B3               	clrf	(__pbssBANK0+4)& (0+127)
   279     001C  01B4               	clrf	(__pbssBANK0+5)& (0+127)
   280     001D                     end_of_initialization:	
   281                           ;End of C runtime variable initialization code
   282                           
   283     001D                     __end_of__initialization:
   284     001D  0183               	clrf	3
   285     001E  120A  118A  299D   	ljmp	_main	;jump to C main() function
   286                           
   287                           	psect	bssCOMMON
   288     0078                     __pbssCOMMON:
   289     0078                     _flags:
   290     0078                     	ds	2
   291                           
   292                           	psect	bssBANK0
   293     002F                     __pbssBANK0:
   294     002F                     _centenas:
   295     002F                     	ds	2
   296     0031                     _decenas:
   297     0031                     	ds	2
   298     0033                     _unidades:
   299     0033                     	ds	2
   300                           
   301                           	psect	cstackCOMMON
   302     0070                     __pcstackCOMMON:
   303     0070                     ?_setup:
   304     0070                     ?_isr:	
   305                           ; 1 bytes @ 0x0
   306                           
   307     0070                     ??_isr:	
   308                           ; 1 bytes @ 0x0
   309                           
   310     0070                     ?_main:	
   311                           ; 1 bytes @ 0x0
   312                           
   313                           
   314                           ; 1 bytes @ 0x0
   315     0070                     	ds	4
   316     0074                     ??_setup:
   317     0074                     ?___awdiv:	
   318                           ; 1 bytes @ 0x4
   319                           
   320     0074                     ?___awmod:	
   321                           ; 2 bytes @ 0x4
   322                           
   323     0074                     ___awdiv@divisor:	
   324                           ; 2 bytes @ 0x4
   325                           
   326     0074                     ___awmod@divisor:	
   327                           ; 2 bytes @ 0x4
   328                           
   329                           
   330                           ; 2 bytes @ 0x4
   331     0074                     	ds	2
   332     0076                     ___awdiv@dividend:
   333     0076                     ___awmod@dividend:	
   334                           ; 2 bytes @ 0x6
   335                           
   336                           
   337                           ; 2 bytes @ 0x6
   338     0076                     	ds	2
   339     0078                     ??_conversor:
   340                           
   341                           	psect	cstackBANK0
   342     0020                     __pcstackBANK0:	
   343                           ; 1 bytes @ 0x8
   344                           
   345     0020                     ??___awdiv:
   346     0020                     ??___awmod:	
   347                           ; 1 bytes @ 0x0
   348                           
   349                           
   350                           ; 1 bytes @ 0x0
   351     0020                     	ds	1
   352     0021                     ___awdiv@counter:
   353     0021                     ___awmod@counter:	
   354                           ; 1 bytes @ 0x1
   355                           
   356                           
   357                           ; 1 bytes @ 0x1
   358     0021                     	ds	1
   359     0022                     ___awdiv@sign:
   360     0022                     ___awmod@sign:	
   361                           ; 1 bytes @ 0x2
   362                           
   363                           
   364                           ; 1 bytes @ 0x2
   365     0022                     	ds	1
   366     0023                     ___awdiv@quotient:
   367                           
   368                           ; 2 bytes @ 0x3
   369     0023                     	ds	2
   370     0025                     ?_conversor:
   371     0025                     conversor@num:	
   372                           ; 1 bytes @ 0x5
   373                           
   374                           
   375                           ; 2 bytes @ 0x5
   376     0025                     	ds	2
   377     0027                     ??_main:
   378                           
   379                           ; 1 bytes @ 0x7
   380     0027                     	ds	2
   381     0029                     main@adc_value_1:
   382                           
   383                           ; 2 bytes @ 0x9
   384     0029                     	ds	2
   385     002B                     main@adc_value_2:
   386                           
   387                           ; 2 bytes @ 0xB
   388     002B                     	ds	2
   389     002D                     main@volt:
   390                           
   391                           ; 2 bytes @ 0xD
   392     002D                     	ds	2
   393                           
   394                           	psect	maintext
   395     019D                     __pmaintext:	
   396 ;;
   397 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   398 ;;
   399 ;; *************** function _main *****************
   400 ;; Defined at:
   401 ;;		line 89 in file "mainPostLab.c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;		None
   404 ;; Auto vars:     Size  Location     Type
   405 ;;  volt            2   13[BANK0 ] int 
   406 ;;  adc_value_2     2   11[BANK0 ] int 
   407 ;;  adc_value_1     2    9[BANK0 ] int 
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      void 
   410 ;; Registers used:
   411 ;;		wreg, status,2, status,0, pclath, cstack
   412 ;; Tracked objects:
   413 ;;		On entry : B00/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   417 ;;      Params:         0       0       0       0       0
   418 ;;      Locals:         0       6       0       0       0
   419 ;;      Temps:          0       2       0       0       0
   420 ;;      Totals:         0       8       0       0       0
   421 ;;Total ram usage:        8 bytes
   422 ;; Hardware stack levels required when called: 4
   423 ;; This function calls:
   424 ;;		_conversor
   425 ;;		_setup
   426 ;; This function is called by:
   427 ;;		Startup code after reset
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431     019D                     _main:	
   432                           ;psect for function _main
   433                           
   434     019D                     l1158:	
   435                           ;incstack = 0
   436                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   437                           
   438                           
   439                           ;mainPostLab.c: 91:     setup();
   440     019D  120A  118A  21EE  120A  118A  	fcall	_setup
   441     01A2                     l1160:
   442                           
   443                           ;mainPostLab.c: 93:         ADCON0bits.CHS = 0;
   444     01A2  30C3               	movlw	-61
   445     01A3  1283               	bcf	3,5	;RP0=0, select bank0
   446     01A4  1303               	bcf	3,6	;RP1=0, select bank0
   447     01A5  059F               	andwf	31,f	;volatile
   448     01A6                     l1162:
   449                           
   450                           ;mainPostLab.c: 94:         ADCON0bits.GO = 1;
   451     01A6  149F               	bsf	31,1	;volatile
   452     01A7                     l71:	
   453                           ;mainPostLab.c: 95:         while(ADCON0bits.GO);
   454                           
   455     01A7  189F               	btfsc	31,1	;volatile
   456     01A8  29AA               	goto	u791
   457     01A9  29AB               	goto	u790
   458     01AA                     u791:
   459     01AA  29A7               	goto	l71
   460     01AB                     u790:
   461     01AB                     l1164:
   462                           
   463                           ;mainPostLab.c: 96:         int adc_value_1 = ADRESH;
   464     01AB  081E               	movf	30,w	;volatile
   465     01AC  00A7               	movwf	??_main
   466     01AD  01A8               	clrf	??_main+1
   467     01AE  0827               	movf	??_main,w
   468     01AF  00A9               	movwf	main@adc_value_1
   469     01B0  0828               	movf	??_main+1,w
   470     01B1  00AA               	movwf	main@adc_value_1+1
   471                           
   472                           ;mainPostLab.c: 97:         PORTB = (char) adc_value_1;
   473     01B2  0829               	movf	main@adc_value_1,w
   474     01B3  0086               	movwf	6	;volatile
   475                           
   476                           ;mainPostLab.c: 98:         _delay((unsigned long)((10)*(8000000/4000.0)));
   477     01B4  301A               	movlw	26
   478     01B5  1283               	bcf	3,5	;RP0=0, select bank0
   479     01B6  1303               	bcf	3,6	;RP1=0, select bank0
   480     01B7  00A8               	movwf	??_main+1
   481     01B8  30F7               	movlw	247
   482     01B9  00A7               	movwf	??_main
   483     01BA                     u817:
   484     01BA  0BA7               	decfsz	??_main,f
   485     01BB  29BA               	goto	u817
   486     01BC  0BA8               	decfsz	??_main+1,f
   487     01BD  29BA               	goto	u817
   488     01BE  29BF               	nop2
   489     01BF                     l1166:
   490                           
   491                           ;mainPostLab.c: 100:         ADCON0bits.CHS = 1;
   492     01BF  1283               	bcf	3,5	;RP0=0, select bank0
   493     01C0  1303               	bcf	3,6	;RP1=0, select bank0
   494     01C1  081F               	movf	31,w	;volatile
   495     01C2  39C3               	andlw	-61
   496     01C3  3804               	iorlw	4
   497     01C4  009F               	movwf	31	;volatile
   498     01C5                     l1168:
   499                           
   500                           ;mainPostLab.c: 101:         ADCON0bits.GO = 1;
   501     01C5  149F               	bsf	31,1	;volatile
   502     01C6                     l74:	
   503                           ;mainPostLab.c: 102:         while(ADCON0bits.GO);
   504                           
   505     01C6  189F               	btfsc	31,1	;volatile
   506     01C7  29C9               	goto	u801
   507     01C8  29CA               	goto	u800
   508     01C9                     u801:
   509     01C9  29C6               	goto	l74
   510     01CA                     u800:
   511     01CA                     l1170:
   512                           
   513                           ;mainPostLab.c: 103:         int adc_value_2 = ADRESH;
   514     01CA  081E               	movf	30,w	;volatile
   515     01CB  00A7               	movwf	??_main
   516     01CC  01A8               	clrf	??_main+1
   517     01CD  0827               	movf	??_main,w
   518     01CE  00AB               	movwf	main@adc_value_2
   519     01CF  0828               	movf	??_main+1,w
   520     01D0  00AC               	movwf	main@adc_value_2+1
   521                           
   522                           ;mainPostLab.c: 104:         int volt = (adc_value_2 * 2);
   523     01D1  1003               	clrc
   524     01D2  0D2B               	rlf	main@adc_value_2,w
   525     01D3  00AD               	movwf	main@volt
   526     01D4  0D2C               	rlf	main@adc_value_2+1,w
   527     01D5  00AE               	movwf	main@volt+1
   528     01D6                     l1172:
   529                           
   530                           ;mainPostLab.c: 105:         conversor((int) volt);
   531     01D6  082E               	movf	main@volt+1,w
   532     01D7  00A6               	movwf	conversor@num+1
   533     01D8  082D               	movf	main@volt,w
   534     01D9  00A5               	movwf	conversor@num
   535     01DA  120A  118A  208A  120A  118A  	fcall	_conversor
   536     01DF                     l1174:
   537                           
   538                           ;mainPostLab.c: 106:         _delay((unsigned long)((10)*(8000000/4000.0)));
   539     01DF  301A               	movlw	26
   540     01E0  1283               	bcf	3,5	;RP0=0, select bank0
   541     01E1  1303               	bcf	3,6	;RP1=0, select bank0
   542     01E2  00A8               	movwf	??_main+1
   543     01E3  30F7               	movlw	247
   544     01E4  00A7               	movwf	??_main
   545     01E5                     u827:
   546     01E5  0BA7               	decfsz	??_main,f
   547     01E6  29E5               	goto	u827
   548     01E7  0BA8               	decfsz	??_main+1,f
   549     01E8  29E5               	goto	u827
   550     01E9  29EA               	nop2
   551     01EA  29A2               	goto	l1160
   552     01EB  120A  118A  2810   	ljmp	start
   553     01EE                     __end_of_main:
   554                           
   555                           	psect	text1
   556     01EE                     __ptext1:	
   557 ;; *************** function _setup *****************
   558 ;; Defined at:
   559 ;;		line 111 in file "mainPostLab.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;		None
   562 ;; Auto vars:     Size  Location     Type
   563 ;;		None
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      void 
   566 ;; Registers used:
   567 ;;		wreg, status,2, status,0
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   573 ;;      Params:         0       0       0       0       0
   574 ;;      Locals:         0       0       0       0       0
   575 ;;      Temps:          2       0       0       0       0
   576 ;;      Totals:         2       0       0       0       0
   577 ;;Total ram usage:        2 bytes
   578 ;; Hardware stack levels used: 1
   579 ;; Hardware stack levels required when called: 2
   580 ;; This function calls:
   581 ;;		Nothing
   582 ;; This function is called by:
   583 ;;		_main
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587     01EE                     _setup:	
   588                           ;psect for function _setup
   589                           
   590     01EE                     l954:	
   591                           ;incstack = 0
   592                           ; Regs used in _setup: [wreg+status,2+status,0]
   593                           
   594                           
   595                           ;mainPostLab.c: 116:     ANSEL = 0;
   596     01EE  1683               	bsf	3,5	;RP0=1, select bank3
   597     01EF  1703               	bsf	3,6	;RP1=1, select bank3
   598     01F0  0188               	clrf	8	;volatile
   599                           
   600                           ;mainPostLab.c: 117:     ANSELH = 0;
   601     01F1  0189               	clrf	9	;volatile
   602                           
   603                           ;mainPostLab.c: 119:     TRISB = 0;
   604     01F2  1683               	bsf	3,5	;RP0=1, select bank1
   605     01F3  1303               	bcf	3,6	;RP1=0, select bank1
   606     01F4  0186               	clrf	6	;volatile
   607                           
   608                           ;mainPostLab.c: 120:     TRISC = 0;
   609     01F5  0187               	clrf	7	;volatile
   610                           
   611                           ;mainPostLab.c: 121:     TRISD = 0;
   612     01F6  0188               	clrf	8	;volatile
   613     01F7                     l956:
   614                           
   615                           ;mainPostLab.c: 124:     OSCCONbits.IRCF = 0b111;
   616     01F7  3070               	movlw	112
   617     01F8  048F               	iorwf	15,f	;volatile
   618     01F9                     l958:
   619                           
   620                           ;mainPostLab.c: 125:     OSCCONbits.SCS = 1;
   621     01F9  140F               	bsf	15,0	;volatile
   622     01FA                     l960:
   623                           
   624                           ;mainPostLab.c: 128:     OPTION_REGbits.T0CS = 0;
   625     01FA  1281               	bcf	1,5	;volatile
   626     01FB                     l962:
   627                           
   628                           ;mainPostLab.c: 129:     OPTION_REGbits.PSA = 0;
   629     01FB  1181               	bcf	1,3	;volatile
   630     01FC                     l964:
   631                           
   632                           ;mainPostLab.c: 130:     OPTION_REGbits.PS = 0b111;
   633     01FC  3007               	movlw	7
   634     01FD  0481               	iorwf	1,f	;volatile
   635     01FE                     l966:
   636                           
   637                           ;mainPostLab.c: 131:     TMR0 = 200;
   638     01FE  30C8               	movlw	200
   639     01FF  1283               	bcf	3,5	;RP0=0, select bank0
   640     0200  1303               	bcf	3,6	;RP1=0, select bank0
   641     0201  0081               	movwf	1	;volatile
   642     0202                     l968:
   643                           
   644                           ;mainPostLab.c: 134:     INTCONbits.T0IF = 0;
   645     0202  110B               	bcf	11,2	;volatile
   646     0203                     l970:
   647                           
   648                           ;mainPostLab.c: 135:     INTCONbits.T0IE = 1;
   649     0203  168B               	bsf	11,5	;volatile
   650     0204                     l972:
   651                           
   652                           ;mainPostLab.c: 136:     INTCONbits.PEIE = 1;
   653     0204  170B               	bsf	11,6	;volatile
   654     0205                     l974:
   655                           
   656                           ;mainPostLab.c: 137:     INTCONbits.GIE = 1;
   657     0205  178B               	bsf	11,7	;volatile
   658     0206                     l976:
   659                           
   660                           ;mainPostLab.c: 140:     ANSELbits.ANS0 = 1;
   661     0206  1683               	bsf	3,5	;RP0=1, select bank3
   662     0207  1703               	bsf	3,6	;RP1=1, select bank3
   663     0208  1408               	bsf	8,0	;volatile
   664     0209                     l978:
   665                           
   666                           ;mainPostLab.c: 141:     ANSELbits.ANS1 = 1;
   667     0209  1488               	bsf	8,1	;volatile
   668     020A                     l980:
   669                           
   670                           ;mainPostLab.c: 142:     TRISAbits.TRISA0 = 1;
   671     020A  1683               	bsf	3,5	;RP0=1, select bank1
   672     020B  1303               	bcf	3,6	;RP1=0, select bank1
   673     020C  1405               	bsf	5,0	;volatile
   674     020D                     l982:
   675                           
   676                           ;mainPostLab.c: 143:     TRISAbits.TRISA1 = 1;
   677     020D  1485               	bsf	5,1	;volatile
   678     020E                     l984:
   679                           
   680                           ;mainPostLab.c: 144:     ADCON0bits.ADCS = 0b10;
   681     020E  1283               	bcf	3,5	;RP0=0, select bank0
   682     020F  1303               	bcf	3,6	;RP1=0, select bank0
   683     0210  081F               	movf	31,w	;volatile
   684     0211  393F               	andlw	-193
   685     0212  3880               	iorlw	128
   686     0213  009F               	movwf	31	;volatile
   687     0214                     l986:
   688                           
   689                           ;mainPostLab.c: 145:     _delay((unsigned long)((1)*(8000000/4000.0)));
   690     0214  3003               	movlw	3
   691     0215  00F5               	movwf	??_setup+1
   692     0216  3097               	movlw	151
   693     0217  00F4               	movwf	??_setup
   694     0218                     u837:
   695     0218  0BF4               	decfsz	??_setup,f
   696     0219  2A18               	goto	u837
   697     021A  0BF5               	decfsz	??_setup+1,f
   698     021B  2A18               	goto	u837
   699     021C  2A1D               	nop2
   700     021D                     l988:
   701                           
   702                           ;mainPostLab.c: 146:     ADCON1bits.ADFM = 0;
   703     021D  1683               	bsf	3,5	;RP0=1, select bank1
   704     021E  1303               	bcf	3,6	;RP1=0, select bank1
   705     021F  139F               	bcf	31,7	;volatile
   706     0220                     l990:
   707                           
   708                           ;mainPostLab.c: 147:     ADCON1bits.VCFG0 = 0;
   709     0220  121F               	bcf	31,4	;volatile
   710     0221                     l992:
   711                           
   712                           ;mainPostLab.c: 148:     ADCON1bits.VCFG1 = 0;
   713     0221  129F               	bcf	31,5	;volatile
   714     0222                     l994:
   715                           
   716                           ;mainPostLab.c: 149:     ADCON0bits.ADON = 1;
   717     0222  1283               	bcf	3,5	;RP0=0, select bank0
   718     0223  1303               	bcf	3,6	;RP1=0, select bank0
   719     0224  141F               	bsf	31,0	;volatile
   720     0225                     l996:
   721                           
   722                           ;mainPostLab.c: 150:     ADIF = 0;
   723     0225  130C               	bcf	12,6	;volatile
   724     0226                     l82:
   725     0226  0008               	return
   726     0227                     __end_of_setup:
   727                           
   728                           	psect	text2
   729     008A                     __ptext2:	
   730 ;; *************** function _conversor *****************
   731 ;; Defined at:
   732 ;;		line 155 in file "mainPostLab.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;  num             2    5[BANK0 ] int 
   735 ;; Auto vars:     Size  Location     Type
   736 ;;		None
   737 ;; Return value:  Size  Location     Type
   738 ;;                  1    wreg      void 
   739 ;; Registers used:
   740 ;;		wreg, status,2, status,0, pclath, cstack
   741 ;; Tracked objects:
   742 ;;		On entry : 0/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   746 ;;      Params:         0       2       0       0       0
   747 ;;      Locals:         0       0       0       0       0
   748 ;;      Temps:          0       0       0       0       0
   749 ;;      Totals:         0       2       0       0       0
   750 ;;Total ram usage:        2 bytes
   751 ;; Hardware stack levels used: 1
   752 ;; Hardware stack levels required when called: 3
   753 ;; This function calls:
   754 ;;		___awdiv
   755 ;;		___awmod
   756 ;; This function is called by:
   757 ;;		_main
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761     008A                     _conversor:	
   762                           ;psect for function _conversor
   763                           
   764     008A                     l1146:	
   765                           ;incstack = 0
   766                           ; Regs used in _conversor: [wreg+status,2+status,0+pclath+cstack]
   767                           
   768                           
   769                           ;mainPostLab.c: 156:     centenas = num / 100;
   770     008A  3064               	movlw	100
   771     008B  00F4               	movwf	___awdiv@divisor
   772     008C  3000               	movlw	0
   773     008D  00F5               	movwf	___awdiv@divisor+1
   774     008E  1283               	bcf	3,5	;RP0=0, select bank0
   775     008F  1303               	bcf	3,6	;RP1=0, select bank0
   776     0090  0826               	movf	conversor@num+1,w
   777     0091  00F7               	movwf	___awdiv@dividend+1
   778     0092  0825               	movf	conversor@num,w
   779     0093  00F6               	movwf	___awdiv@dividend
   780     0094  120A  118A  2021  120A  118A  	fcall	___awdiv
   781     0099  0875               	movf	?___awdiv+1,w
   782     009A  1283               	bcf	3,5	;RP0=0, select bank0
   783     009B  1303               	bcf	3,6	;RP1=0, select bank0
   784     009C  00B0               	movwf	_centenas+1
   785     009D  0874               	movf	?___awdiv,w
   786     009E  00AF               	movwf	_centenas
   787                           
   788                           ;mainPostLab.c: 157:     num %= 100;
   789     009F  3064               	movlw	100
   790     00A0  00F4               	movwf	___awmod@divisor
   791     00A1  3000               	movlw	0
   792     00A2  00F5               	movwf	___awmod@divisor+1
   793     00A3  0826               	movf	conversor@num+1,w
   794     00A4  00F7               	movwf	___awmod@dividend+1
   795     00A5  0825               	movf	conversor@num,w
   796     00A6  00F6               	movwf	___awmod@dividend
   797     00A7  120A  118A  20ED  120A  118A  	fcall	___awmod
   798     00AC  0875               	movf	?___awmod+1,w
   799     00AD  1283               	bcf	3,5	;RP0=0, select bank0
   800     00AE  1303               	bcf	3,6	;RP1=0, select bank0
   801     00AF  00A6               	movwf	conversor@num+1
   802     00B0  0874               	movf	?___awmod,w
   803     00B1  00A5               	movwf	conversor@num
   804                           
   805                           ;mainPostLab.c: 158:     decenas = num / 10;
   806     00B2  300A               	movlw	10
   807     00B3  00F4               	movwf	___awdiv@divisor
   808     00B4  3000               	movlw	0
   809     00B5  00F5               	movwf	___awdiv@divisor+1
   810     00B6  0826               	movf	conversor@num+1,w
   811     00B7  00F7               	movwf	___awdiv@dividend+1
   812     00B8  0825               	movf	conversor@num,w
   813     00B9  00F6               	movwf	___awdiv@dividend
   814     00BA  120A  118A  2021  120A  118A  	fcall	___awdiv
   815     00BF  0875               	movf	?___awdiv+1,w
   816     00C0  1283               	bcf	3,5	;RP0=0, select bank0
   817     00C1  1303               	bcf	3,6	;RP1=0, select bank0
   818     00C2  00B2               	movwf	_decenas+1
   819     00C3  0874               	movf	?___awdiv,w
   820     00C4  00B1               	movwf	_decenas
   821                           
   822                           ;mainPostLab.c: 159:     unidades = num % 10;
   823     00C5  300A               	movlw	10
   824     00C6  00F4               	movwf	___awmod@divisor
   825     00C7  3000               	movlw	0
   826     00C8  00F5               	movwf	___awmod@divisor+1
   827     00C9  0826               	movf	conversor@num+1,w
   828     00CA  00F7               	movwf	___awmod@dividend+1
   829     00CB  0825               	movf	conversor@num,w
   830     00CC  00F6               	movwf	___awmod@dividend
   831     00CD  120A  118A  20ED  120A  118A  	fcall	___awmod
   832     00D2  0875               	movf	?___awmod+1,w
   833     00D3  1283               	bcf	3,5	;RP0=0, select bank0
   834     00D4  1303               	bcf	3,6	;RP1=0, select bank0
   835     00D5  00B4               	movwf	_unidades+1
   836     00D6  0874               	movf	?___awmod,w
   837     00D7  00B3               	movwf	_unidades
   838     00D8                     l1148:
   839                           
   840                           ;mainPostLab.c: 161:     if (centenas == 5){
   841     00D8  3005               	movlw	5
   842     00D9  062F               	xorwf	_centenas,w
   843     00DA  0430               	iorwf	_centenas+1,w
   844     00DB  1D03               	btfss	3,2
   845     00DC  28DE               	goto	u761
   846     00DD  28DF               	goto	u760
   847     00DE                     u761:
   848     00DE  28EC               	goto	l88
   849     00DF                     u760:
   850     00DF                     l1150:
   851                           
   852                           ;mainPostLab.c: 162:         if (decenas >= 0){
   853     00DF  1BB2               	btfsc	_decenas+1,7
   854     00E0  28E2               	goto	u771
   855     00E1  28E3               	goto	u770
   856     00E2                     u771:
   857     00E2  28EC               	goto	l88
   858     00E3                     u770:
   859     00E3                     l1152:
   860                           
   861                           ;mainPostLab.c: 163:             if (unidades >= 0){
   862     00E3  1BB4               	btfsc	_unidades+1,7
   863     00E4  28E6               	goto	u781
   864     00E5  28E7               	goto	u780
   865     00E6                     u781:
   866     00E6  28EC               	goto	l85
   867     00E7                     u780:
   868     00E7                     l1154:
   869                           
   870                           ;mainPostLab.c: 164:                 decenas = 0;
   871     00E7  01B1               	clrf	_decenas
   872     00E8  01B2               	clrf	_decenas+1
   873                           
   874                           ;mainPostLab.c: 165:                 unidades = 0;
   875     00E9  01B3               	clrf	_unidades
   876     00EA  01B4               	clrf	_unidades+1
   877     00EB  28EC               	goto	l88
   878     00EC                     l85:	
   879                           ;mainPostLab.c: 168:     }
   880                           
   881     00EC                     l88:
   882     00EC  0008               	return
   883     00ED                     __end_of_conversor:
   884                           
   885                           	psect	text3
   886     00ED                     __ptext3:	
   887 ;; *************** function ___awmod *****************
   888 ;; Defined at:
   889 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;  divisor         2    4[COMMON] int 
   892 ;;  dividend        2    6[COMMON] int 
   893 ;; Auto vars:     Size  Location     Type
   894 ;;  sign            1    2[BANK0 ] unsigned char 
   895 ;;  counter         1    1[BANK0 ] unsigned char 
   896 ;; Return value:  Size  Location     Type
   897 ;;                  2    4[COMMON] int 
   898 ;; Registers used:
   899 ;;		wreg, status,2, status,0
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   905 ;;      Params:         4       0       0       0       0
   906 ;;      Locals:         0       2       0       0       0
   907 ;;      Temps:          0       1       0       0       0
   908 ;;      Totals:         4       3       0       0       0
   909 ;;Total ram usage:        7 bytes
   910 ;; Hardware stack levels used: 1
   911 ;; Hardware stack levels required when called: 2
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		_conversor
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919     00ED                     ___awmod:	
   920                           ;psect for function ___awmod
   921                           
   922     00ED                     l1108:	
   923                           ;incstack = 0
   924                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   925                           
   926     00ED  1283               	bcf	3,5	;RP0=0, select bank0
   927     00EE  1303               	bcf	3,6	;RP1=0, select bank0
   928     00EF  01A2               	clrf	___awmod@sign
   929     00F0                     l1110:
   930     00F0  1FF7               	btfss	___awmod@dividend+1,7
   931     00F1  28F3               	goto	u671
   932     00F2  28F4               	goto	u670
   933     00F3                     u671:
   934     00F3  28FB               	goto	l1116
   935     00F4                     u670:
   936     00F4                     l1112:
   937     00F4  09F6               	comf	___awmod@dividend,f
   938     00F5  09F7               	comf	___awmod@dividend+1,f
   939     00F6  0AF6               	incf	___awmod@dividend,f
   940     00F7  1903               	skipnz
   941     00F8  0AF7               	incf	___awmod@dividend+1,f
   942     00F9                     l1114:
   943     00F9  01A2               	clrf	___awmod@sign
   944     00FA  0AA2               	incf	___awmod@sign,f
   945     00FB                     l1116:
   946     00FB  1FF5               	btfss	___awmod@divisor+1,7
   947     00FC  28FE               	goto	u681
   948     00FD  28FF               	goto	u680
   949     00FE                     u681:
   950     00FE  2904               	goto	l1120
   951     00FF                     u680:
   952     00FF                     l1118:
   953     00FF  09F4               	comf	___awmod@divisor,f
   954     0100  09F5               	comf	___awmod@divisor+1,f
   955     0101  0AF4               	incf	___awmod@divisor,f
   956     0102  1903               	skipnz
   957     0103  0AF5               	incf	___awmod@divisor+1,f
   958     0104                     l1120:
   959     0104  0874               	movf	___awmod@divisor,w
   960     0105  0475               	iorwf	___awmod@divisor+1,w
   961     0106  1903               	btfsc	3,2
   962     0107  2909               	goto	u691
   963     0108  290A               	goto	u690
   964     0109                     u691:
   965     0109  2939               	goto	l1138
   966     010A                     u690:
   967     010A                     l1122:
   968     010A  01A1               	clrf	___awmod@counter
   969     010B  0AA1               	incf	___awmod@counter,f
   970     010C  2918               	goto	l1128
   971     010D                     l1124:
   972     010D  3001               	movlw	1
   973     010E                     u705:
   974     010E  1003               	clrc
   975     010F  0DF4               	rlf	___awmod@divisor,f
   976     0110  0DF5               	rlf	___awmod@divisor+1,f
   977     0111  3EFF               	addlw	-1
   978     0112  1D03               	skipz
   979     0113  290E               	goto	u705
   980     0114                     l1126:
   981     0114  3001               	movlw	1
   982     0115  00A0               	movwf	??___awmod
   983     0116  0820               	movf	??___awmod,w
   984     0117  07A1               	addwf	___awmod@counter,f
   985     0118                     l1128:
   986     0118  1FF5               	btfss	___awmod@divisor+1,7
   987     0119  291B               	goto	u711
   988     011A  291C               	goto	u710
   989     011B                     u711:
   990     011B  290D               	goto	l1124
   991     011C                     u710:
   992     011C                     l1130:
   993     011C  0875               	movf	___awmod@divisor+1,w
   994     011D  0277               	subwf	___awmod@dividend+1,w
   995     011E  1D03               	skipz
   996     011F  2922               	goto	u725
   997     0120  0874               	movf	___awmod@divisor,w
   998     0121  0276               	subwf	___awmod@dividend,w
   999     0122                     u725:
  1000     0122  1C03               	skipc
  1001     0123  2925               	goto	u721
  1002     0124  2926               	goto	u720
  1003     0125                     u721:
  1004     0125  292C               	goto	l1134
  1005     0126                     u720:
  1006     0126                     l1132:
  1007     0126  0874               	movf	___awmod@divisor,w
  1008     0127  02F6               	subwf	___awmod@dividend,f
  1009     0128  0875               	movf	___awmod@divisor+1,w
  1010     0129  1C03               	skipc
  1011     012A  03F7               	decf	___awmod@dividend+1,f
  1012     012B  02F7               	subwf	___awmod@dividend+1,f
  1013     012C                     l1134:
  1014     012C  3001               	movlw	1
  1015     012D                     u735:
  1016     012D  1003               	clrc
  1017     012E  0CF5               	rrf	___awmod@divisor+1,f
  1018     012F  0CF4               	rrf	___awmod@divisor,f
  1019     0130  3EFF               	addlw	-1
  1020     0131  1D03               	skipz
  1021     0132  292D               	goto	u735
  1022     0133                     l1136:
  1023     0133  3001               	movlw	1
  1024     0134  02A1               	subwf	___awmod@counter,f
  1025     0135  1D03               	btfss	3,2
  1026     0136  2938               	goto	u741
  1027     0137  2939               	goto	u740
  1028     0138                     u741:
  1029     0138  291C               	goto	l1130
  1030     0139                     u740:
  1031     0139                     l1138:
  1032     0139  0822               	movf	___awmod@sign,w
  1033     013A  1903               	btfsc	3,2
  1034     013B  293D               	goto	u751
  1035     013C  293E               	goto	u750
  1036     013D                     u751:
  1037     013D  2943               	goto	l1142
  1038     013E                     u750:
  1039     013E                     l1140:
  1040     013E  09F6               	comf	___awmod@dividend,f
  1041     013F  09F7               	comf	___awmod@dividend+1,f
  1042     0140  0AF6               	incf	___awmod@dividend,f
  1043     0141  1903               	skipnz
  1044     0142  0AF7               	incf	___awmod@dividend+1,f
  1045     0143                     l1142:
  1046     0143  0877               	movf	___awmod@dividend+1,w
  1047     0144  00F5               	movwf	?___awmod+1
  1048     0145  0876               	movf	___awmod@dividend,w
  1049     0146  00F4               	movwf	?___awmod
  1050     0147                     l340:
  1051     0147  0008               	return
  1052     0148                     __end_of___awmod:
  1053                           
  1054                           	psect	text4
  1055     0021                     __ptext4:	
  1056 ;; *************** function ___awdiv *****************
  1057 ;; Defined at:
  1058 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;  divisor         2    4[COMMON] int 
  1061 ;;  dividend        2    6[COMMON] int 
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;  quotient        2    3[BANK0 ] int 
  1064 ;;  sign            1    2[BANK0 ] unsigned char 
  1065 ;;  counter         1    1[BANK0 ] unsigned char 
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  2    4[COMMON] int 
  1068 ;; Registers used:
  1069 ;;		wreg, status,2, status,0
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1075 ;;      Params:         4       0       0       0       0
  1076 ;;      Locals:         0       4       0       0       0
  1077 ;;      Temps:          0       1       0       0       0
  1078 ;;      Totals:         4       5       0       0       0
  1079 ;;Total ram usage:        9 bytes
  1080 ;; Hardware stack levels used: 1
  1081 ;; Hardware stack levels required when called: 2
  1082 ;; This function calls:
  1083 ;;		Nothing
  1084 ;; This function is called by:
  1085 ;;		_conversor
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089     0021                     ___awdiv:	
  1090                           ;psect for function ___awdiv
  1091                           
  1092     0021                     l1064:	
  1093                           ;incstack = 0
  1094                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1095                           
  1096     0021  1283               	bcf	3,5	;RP0=0, select bank0
  1097     0022  1303               	bcf	3,6	;RP1=0, select bank0
  1098     0023  01A2               	clrf	___awdiv@sign
  1099     0024                     l1066:
  1100     0024  1FF5               	btfss	___awdiv@divisor+1,7
  1101     0025  2827               	goto	u571
  1102     0026  2828               	goto	u570
  1103     0027                     u571:
  1104     0027  282F               	goto	l1072
  1105     0028                     u570:
  1106     0028                     l1068:
  1107     0028  09F4               	comf	___awdiv@divisor,f
  1108     0029  09F5               	comf	___awdiv@divisor+1,f
  1109     002A  0AF4               	incf	___awdiv@divisor,f
  1110     002B  1903               	skipnz
  1111     002C  0AF5               	incf	___awdiv@divisor+1,f
  1112     002D                     l1070:
  1113     002D  01A2               	clrf	___awdiv@sign
  1114     002E  0AA2               	incf	___awdiv@sign,f
  1115     002F                     l1072:
  1116     002F  1FF7               	btfss	___awdiv@dividend+1,7
  1117     0030  2832               	goto	u581
  1118     0031  2833               	goto	u580
  1119     0032                     u581:
  1120     0032  283C               	goto	l1078
  1121     0033                     u580:
  1122     0033                     l1074:
  1123     0033  09F6               	comf	___awdiv@dividend,f
  1124     0034  09F7               	comf	___awdiv@dividend+1,f
  1125     0035  0AF6               	incf	___awdiv@dividend,f
  1126     0036  1903               	skipnz
  1127     0037  0AF7               	incf	___awdiv@dividend+1,f
  1128     0038                     l1076:
  1129     0038  3001               	movlw	1
  1130     0039  00A0               	movwf	??___awdiv
  1131     003A  0820               	movf	??___awdiv,w
  1132     003B  06A2               	xorwf	___awdiv@sign,f
  1133     003C                     l1078:
  1134     003C  01A3               	clrf	___awdiv@quotient
  1135     003D  01A4               	clrf	___awdiv@quotient+1
  1136     003E                     l1080:
  1137     003E  0874               	movf	___awdiv@divisor,w
  1138     003F  0475               	iorwf	___awdiv@divisor+1,w
  1139     0040  1903               	btfsc	3,2
  1140     0041  2843               	goto	u591
  1141     0042  2844               	goto	u590
  1142     0043                     u591:
  1143     0043  287B               	goto	l1100
  1144     0044                     u590:
  1145     0044                     l1082:
  1146     0044  01A1               	clrf	___awdiv@counter
  1147     0045  0AA1               	incf	___awdiv@counter,f
  1148     0046  2852               	goto	l1088
  1149     0047                     l1084:
  1150     0047  3001               	movlw	1
  1151     0048                     u605:
  1152     0048  1003               	clrc
  1153     0049  0DF4               	rlf	___awdiv@divisor,f
  1154     004A  0DF5               	rlf	___awdiv@divisor+1,f
  1155     004B  3EFF               	addlw	-1
  1156     004C  1D03               	skipz
  1157     004D  2848               	goto	u605
  1158     004E                     l1086:
  1159     004E  3001               	movlw	1
  1160     004F  00A0               	movwf	??___awdiv
  1161     0050  0820               	movf	??___awdiv,w
  1162     0051  07A1               	addwf	___awdiv@counter,f
  1163     0052                     l1088:
  1164     0052  1FF5               	btfss	___awdiv@divisor+1,7
  1165     0053  2855               	goto	u611
  1166     0054  2856               	goto	u610
  1167     0055                     u611:
  1168     0055  2847               	goto	l1084
  1169     0056                     u610:
  1170     0056                     l1090:
  1171     0056  3001               	movlw	1
  1172     0057                     u625:
  1173     0057  1003               	clrc
  1174     0058  0DA3               	rlf	___awdiv@quotient,f
  1175     0059  0DA4               	rlf	___awdiv@quotient+1,f
  1176     005A  3EFF               	addlw	-1
  1177     005B  1D03               	skipz
  1178     005C  2857               	goto	u625
  1179     005D  0875               	movf	___awdiv@divisor+1,w
  1180     005E  0277               	subwf	___awdiv@dividend+1,w
  1181     005F  1D03               	skipz
  1182     0060  2863               	goto	u635
  1183     0061  0874               	movf	___awdiv@divisor,w
  1184     0062  0276               	subwf	___awdiv@dividend,w
  1185     0063                     u635:
  1186     0063  1C03               	skipc
  1187     0064  2866               	goto	u631
  1188     0065  2867               	goto	u630
  1189     0066                     u631:
  1190     0066  286E               	goto	l1096
  1191     0067                     u630:
  1192     0067                     l1092:
  1193     0067  0874               	movf	___awdiv@divisor,w
  1194     0068  02F6               	subwf	___awdiv@dividend,f
  1195     0069  0875               	movf	___awdiv@divisor+1,w
  1196     006A  1C03               	skipc
  1197     006B  03F7               	decf	___awdiv@dividend+1,f
  1198     006C  02F7               	subwf	___awdiv@dividend+1,f
  1199     006D                     l1094:
  1200     006D  1423               	bsf	___awdiv@quotient,0
  1201     006E                     l1096:
  1202     006E  3001               	movlw	1
  1203     006F                     u645:
  1204     006F  1003               	clrc
  1205     0070  0CF5               	rrf	___awdiv@divisor+1,f
  1206     0071  0CF4               	rrf	___awdiv@divisor,f
  1207     0072  3EFF               	addlw	-1
  1208     0073  1D03               	skipz
  1209     0074  286F               	goto	u645
  1210     0075                     l1098:
  1211     0075  3001               	movlw	1
  1212     0076  02A1               	subwf	___awdiv@counter,f
  1213     0077  1D03               	btfss	3,2
  1214     0078  287A               	goto	u651
  1215     0079  287B               	goto	u650
  1216     007A                     u651:
  1217     007A  2856               	goto	l1090
  1218     007B                     u650:
  1219     007B                     l1100:
  1220     007B  0822               	movf	___awdiv@sign,w
  1221     007C  1903               	btfsc	3,2
  1222     007D  287F               	goto	u661
  1223     007E  2880               	goto	u660
  1224     007F                     u661:
  1225     007F  2885               	goto	l1104
  1226     0080                     u660:
  1227     0080                     l1102:
  1228     0080  09A3               	comf	___awdiv@quotient,f
  1229     0081  09A4               	comf	___awdiv@quotient+1,f
  1230     0082  0AA3               	incf	___awdiv@quotient,f
  1231     0083  1903               	skipnz
  1232     0084  0AA4               	incf	___awdiv@quotient+1,f
  1233     0085                     l1104:
  1234     0085  0824               	movf	___awdiv@quotient+1,w
  1235     0086  00F5               	movwf	?___awdiv+1
  1236     0087  0823               	movf	___awdiv@quotient,w
  1237     0088  00F4               	movwf	?___awdiv
  1238     0089                     l327:
  1239     0089  0008               	return
  1240     008A                     __end_of___awdiv:
  1241                           
  1242                           	psect	text5
  1243     0148                     __ptext5:	
  1244 ;; *************** function _isr *****************
  1245 ;; Defined at:
  1246 ;;		line 58 in file "mainPostLab.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;		None
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;		None
  1251 ;; Return value:  Size  Location     Type
  1252 ;;                  1    wreg      void 
  1253 ;; Registers used:
  1254 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1255 ;; Tracked objects:
  1256 ;;		On entry : 0/0
  1257 ;;		On exit  : 0/0
  1258 ;;		Unchanged: 0/0
  1259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1260 ;;      Params:         0       0       0       0       0
  1261 ;;      Locals:         0       0       0       0       0
  1262 ;;      Temps:          4       0       0       0       0
  1263 ;;      Totals:         4       0       0       0       0
  1264 ;;Total ram usage:        4 bytes
  1265 ;; Hardware stack levels used: 2
  1266 ;; This function calls:
  1267 ;;		Nothing
  1268 ;; This function is called by:
  1269 ;;		Interrupt level 1
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273     0148                     _isr:	
  1274                           ;psect for function _isr
  1275                           
  1276     0148                     i1l1012:
  1277                           
  1278                           ;mainPostLab.c: 60:     if(T0IF)
  1279     0148  1D0B               	btfss	11,2	;volatile
  1280     0149  294B               	goto	u51_21
  1281     014A  294C               	goto	u51_20
  1282     014B                     u51_21:
  1283     014B  2992               	goto	i1l65
  1284     014C                     u51_20:
  1285     014C                     i1l1014:
  1286                           
  1287                           ;mainPostLab.c: 61:     {;mainPostLab.c: 62:         PORTD = 0;
  1288     014C  1283               	bcf	3,5	;RP0=0, select bank0
  1289     014D  1303               	bcf	3,6	;RP1=0, select bank0
  1290     014E  0188               	clrf	8	;volatile
  1291     014F                     i1l1016:
  1292                           
  1293                           ;mainPostLab.c: 64:         if (flags == 0)
  1294     014F  0878               	movf	_flags,w
  1295     0150  0479               	iorwf	_flags+1,w
  1296     0151  1D03               	btfss	3,2
  1297     0152  2954               	goto	u52_21
  1298     0153  2955               	goto	u52_20
  1299     0154                     u52_21:
  1300     0154  2965               	goto	i1l1024
  1301     0155                     u52_20:
  1302     0155                     i1l1018:
  1303                           
  1304                           ;mainPostLab.c: 65:         {;mainPostLab.c: 66:             PORTC = segmentos[centenas]
      +                          ;
  1305     0155  082F               	movf	_centenas,w
  1306     0156  3E01               	addlw	low ((_segmentos-__stringbase)| (0+32768))
  1307     0157  0084               	movwf	4
  1308     0158  120A  118A  2227  120A  118A  	fcall	stringdir
  1309     015D  0087               	movwf	7	;volatile
  1310     015E                     i1l1020:
  1311                           
  1312                           ;mainPostLab.c: 67:             PORTD = 0b0001;
  1313     015E  3001               	movlw	1
  1314     015F  0088               	movwf	8	;volatile
  1315     0160                     i1l1022:
  1316                           
  1317                           ;mainPostLab.c: 68:             flags = 1;
  1318     0160  3001               	movlw	1
  1319     0161  00F8               	movwf	_flags
  1320     0162  3000               	movlw	0
  1321     0163  00F9               	movwf	_flags+1
  1322                           
  1323                           ;mainPostLab.c: 69:         }
  1324     0164  298F               	goto	i1l1040
  1325     0165                     i1l1024:
  1326     0165  0378               	decf	_flags,w
  1327     0166  0479               	iorwf	_flags+1,w
  1328     0167  1D03               	btfss	3,2
  1329     0168  296A               	goto	u53_21
  1330     0169  296B               	goto	u53_20
  1331     016A                     u53_21:
  1332     016A  297B               	goto	i1l1032
  1333     016B                     u53_20:
  1334     016B                     i1l1026:
  1335                           
  1336                           ;mainPostLab.c: 71:         {;mainPostLab.c: 72:             PORTC = segmentos[decenas];
  1337     016B  0831               	movf	_decenas,w
  1338     016C  3E01               	addlw	low ((_segmentos-__stringbase)| (0+32768))
  1339     016D  0084               	movwf	4
  1340     016E  120A  118A  2227  120A  118A  	fcall	stringdir
  1341     0173  0087               	movwf	7	;volatile
  1342     0174                     i1l1028:
  1343                           
  1344                           ;mainPostLab.c: 73:             PORTD = 0b0010;
  1345     0174  3002               	movlw	2
  1346     0175  0088               	movwf	8	;volatile
  1347     0176                     i1l1030:
  1348                           
  1349                           ;mainPostLab.c: 74:             flags = 2;
  1350     0176  3002               	movlw	2
  1351     0177  00F8               	movwf	_flags
  1352     0178  3000               	movlw	0
  1353     0179  00F9               	movwf	_flags+1
  1354                           
  1355                           ;mainPostLab.c: 75:         }
  1356     017A  298F               	goto	i1l1040
  1357     017B                     i1l1032:
  1358     017B  3002               	movlw	2
  1359     017C  0678               	xorwf	_flags,w
  1360     017D  0479               	iorwf	_flags+1,w
  1361     017E  1D03               	btfss	3,2
  1362     017F  2981               	goto	u54_21
  1363     0180  2982               	goto	u54_20
  1364     0181                     u54_21:
  1365     0181  298F               	goto	i1l1040
  1366     0182                     u54_20:
  1367     0182                     i1l1034:
  1368                           
  1369                           ;mainPostLab.c: 77:         {;mainPostLab.c: 78:             PORTC = segmentos[unidades]
      +                          ;
  1370     0182  0833               	movf	_unidades,w
  1371     0183  3E01               	addlw	low ((_segmentos-__stringbase)| (0+32768))
  1372     0184  0084               	movwf	4
  1373     0185  120A  118A  2227  120A  118A  	fcall	stringdir
  1374     018A  0087               	movwf	7	;volatile
  1375     018B                     i1l1036:
  1376                           
  1377                           ;mainPostLab.c: 79:             PORTD = 0b0100;
  1378     018B  3004               	movlw	4
  1379     018C  0088               	movwf	8	;volatile
  1380     018D                     i1l1038:
  1381                           
  1382                           ;mainPostLab.c: 80:             flags = 0;
  1383     018D  01F8               	clrf	_flags
  1384     018E  01F9               	clrf	_flags+1
  1385     018F                     i1l1040:
  1386                           
  1387                           ;mainPostLab.c: 83:         INTCONbits.T0IF = 0;
  1388     018F  110B               	bcf	11,2	;volatile
  1389     0190                     i1l1042:
  1390                           
  1391                           ;mainPostLab.c: 84:         TMR0 = 200;
  1392     0190  30C8               	movlw	200
  1393     0191  0081               	movwf	1	;volatile
  1394     0192                     i1l65:
  1395     0192  0873               	movf	??_isr+3,w
  1396     0193  00FF               	movwf	btemp+1
  1397     0194  0872               	movf	??_isr+2,w
  1398     0195  008A               	movwf	10
  1399     0196  0871               	movf	??_isr+1,w
  1400     0197  0084               	movwf	4
  1401     0198  0E70               	swapf	??_isr,w
  1402     0199  0083               	movwf	3
  1403     019A  0EFE               	swapf	btemp,f
  1404     019B  0E7E               	swapf	btemp,w
  1405     019C  0009               	retfie
  1406     019D                     __end_of_isr:
  1407     007E                     btemp	set	126	;btemp
  1408     007E                     wtemp0	set	126
  1409                           
  1410                           	psect	intentry
  1411     0004                     __pintentry:	
  1412                           ;incstack = 0
  1413                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath]
  1414                           
  1415     0004                     interrupt_function:
  1416     007E                     saved_w	set	btemp
  1417     0004  00FE               	movwf	btemp
  1418     0005  0E03               	swapf	3,w
  1419     0006  00F0               	movwf	??_isr
  1420     0007  0804               	movf	4,w
  1421     0008  00F1               	movwf	??_isr+1
  1422     0009  080A               	movf	10,w
  1423     000A  00F2               	movwf	??_isr+2
  1424     000B  087F               	movf	btemp+1,w
  1425     000C  00F3               	movwf	??_isr+3
  1426     000D  120A  118A  2948   	ljmp	_isr
  1427                           
  1428                           	psect	idloc
  1429                           
  1430                           ;Config register IDLOC0 @ 0x2000
  1431                           ;	unspecified, using default values
  1432     2000                     	org	8192
  1433     2000  3FFF               	dw	16383
  1434                           
  1435                           ;Config register IDLOC1 @ 0x2001
  1436                           ;	unspecified, using default values
  1437     2001                     	org	8193
  1438     2001  3FFF               	dw	16383
  1439                           
  1440                           ;Config register IDLOC2 @ 0x2002
  1441                           ;	unspecified, using default values
  1442     2002                     	org	8194
  1443     2002  3FFF               	dw	16383
  1444                           
  1445                           ;Config register IDLOC3 @ 0x2003
  1446                           ;	unspecified, using default values
  1447     2003                     	org	8195
  1448     2003  3FFF               	dw	16383
  1449                           
  1450                           	psect	config
  1451                           
  1452                           ;Config register CONFIG1 @ 0x2007
  1453                           ;	Oscillator Selection bits
  1454                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1455                           ;	Watchdog Timer Enable bit
  1456                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1457                           ;	Power-up Timer Enable bit
  1458                           ;	PWRTE = OFF, PWRT disabled
  1459                           ;	RE3/MCLR pin function select bit
  1460                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1461                           ;	Code Protection bit
  1462                           ;	CP = OFF, Program memory code protection is disabled
  1463                           ;	Data Code Protection bit
  1464                           ;	CPD = OFF, Data memory code protection is disabled
  1465                           ;	Brown Out Reset Selection bits
  1466                           ;	BOREN = OFF, BOR disabled
  1467                           ;	Internal External Switchover bit
  1468                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1469                           ;	Fail-Safe Clock Monitor Enabled bit
  1470                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1471                           ;	Low Voltage Programming Enable bit
  1472                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1473                           ;	In-Circuit Debugger Mode bit
  1474                           ;	DEBUG = 0x1, unprogramme  1475     2007                     	org	8199
  1476     2007  20D4               	dw	8404
  1477                           
  1478                           ;Config register CONFIG2 @ 0x2008
  1479                           ;	Brown-out Reset Selection bit
  1480                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1481                           ;	Flash Program Memory Self Write Enable bits
  1482                           ;	WRT = OFF, Write protection off
  1483     2008                     	org	8200
  1484     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     15      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _conversor->___awdiv
    _conversor->___awmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_conversor
    _conversor->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    1917
                                              7 BANK0      8     8      0
                          _conversor
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _conversor                                            2     0      2    1815
                                              5 BANK0      2     0      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              4 COMMON     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              4 COMMON     4     0      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _conversor
     ___awdiv
     ___awmod
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      F      15       5       26.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1F      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Mar 31 08:20:13 2023

                      pc 0002                       l71 01A7                       l82 0226  
                     l74 01C6                       l85 00EC                       l88 00EC  
           ___awdiv@sign 0022                       fsr 0004                      l340 0147  
                    l327 0089                      l960 01FA                      l970 0203  
                    l962 01FB                      l954 01EE                      l980 020A  
                    l972 0204                      l964 01FC                      l956 01F7  
                    l990 0220                      l982 020D                      l974 0205  
                    l966 01FE                      l958 01F9                      l992 0221  
                    l984 020E                      l976 0206                      l968 0202  
                    l994 0222                      l986 0214                      l978 0209  
                    l996 0225                      l988 021D                      u610 0056  
                    u611 0055                      u605 0048                      u630 0067  
                    u710 011C                      u631 0066                      u711 011B  
                    u720 0126                      u800 01CA                      u625 0057  
                    u721 0125                      u705 010E                      u801 01C9  
                    u650 007B                      u570 0028                      u651 007A  
                    u635 0063                      u571 0027                      u660 0080  
                    u580 0033                      u740 0139                      u661 007F  
                    u645 006F                      u581 0032                      u741 0138  
                    u725 0122                      u590 0044                      u750 013E  
                    u670 00F4                      u591 0043                      u751 013D  
                    u735 012D                      u671 00F3                      u680 00FF  
                    u760 00DF                      u681 00FE                      u761 00DE  
                    u817 01BA                      u690 010A                      u770 00E3  
                    u691 0109                      u771 00E2                      u827 01E5  
                    u780 00E7                      u781 00E6                      u837 0218  
                    u790 01AB                      u791 01AA                      _isr 0148  
                    fsr0 0004             ___awmod@sign 0022                     l1100 007B  
                   l1102 0080                     l1110 00F0                     l1104 0085  
                   l1120 0104                     l1112 00F4                     l1130 011C  
                   l1122 010A                     l1114 00F9                     l1140 013E  
                   l1132 0126                     l1124 010D                     l1116 00FB  
                   l1108 00ED                     l1070 002D                     l1142 0143  
                   l1134 012C                     l1126 0114                     l1118 00FF  
                   l1150 00DF                     l1080 003E                     l1072 002F  
                   l1064 0021                     l1136 0133                     l1128 0118  
                   l1152 00E3                     l1160 01A2                     l1090 0056  
                   l1082 0044                     l1074 0033                     l1066 0024  
                   l1138 0139                     l1154 00E7                     l1146 008A  
                   l1170 01CA                     l1162 01A6                     l1092 0067  
                   l1084 0047                     l1076 0038                     l1068 0028  
                   l1148 00D8                     l1172 01D6                     l1164 01AB  
                   l1094 006D                     l1086 004E                     l1078 003C  
                   l1174 01DF                     l1166 01BF                     l1158 019D  
                   l1096 006E                     l1088 0052                     l1168 01C5  
                   l1098 0075                     _ADIF 0066                     ?_isr 0070  
                   _T0IF 005A                     i1l65 0192                     _TMR0 0001  
                   _main 019D                     btemp 007E                     start 0010  
                  ??_isr 0070                    ?_main 0070          __end_of___awdiv 008A  
        __end_of___awmod 0148                    _ANSEL 0188          ___awdiv@divisor 0074  
        ___awdiv@counter 0021                    u51_20 014C                    u51_21 014B  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  u52_20 0155                    u52_21 0154                    u53_20 016B  
                  u53_21 016A                    u54_20 0182                    u54_21 0181  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _flags 0078                    _setup 01EE                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0013  
           __end_of_main 01EE                   ??_main 0027                   _ADRESH 001E  
       ___awdiv@dividend 0076                   ?_setup 0070                   _ANSELH 0189  
                 i1l1020 015E                   i1l1012 0148                   i1l1030 0176  
                 i1l1022 0160                   i1l1014 014C                   i1l1032 017B  
                 i1l1040 018F                   i1l1024 0165                   i1l1016 014F  
                 i1l1042 0190                   i1l1034 0182                   i1l1026 016B  
                 i1l1018 0155                   i1l1036 018B                   i1l1028 0174  
                 i1l1038 018D                ??___awdiv 0020                ??___awmod 0020  
       ___awdiv@quotient 0023          ___awmod@divisor 0074          ___awmod@counter 0021  
           conversor@num 0025                   saved_w 007E  __end_of__initialization 001D  
         __pcstackCOMMON 0070            __end_of_setup 0227           _OPTION_REGbits 0081  
                ??_setup 0074               __pbssBANK0 002F               __pmaintext 019D  
             __pintentry 0004               __stringtab 0227                  ___awdiv 0021  
                ___awmod 00ED                  _decenas 0031        __end_of_conversor 00ED  
              _ANSELbits 0188                  __ptext1 01EE                  __ptext2 008A  
                __ptext3 00ED                  __ptext4 0021                  __ptext5 0148  
       ___awmod@dividend 0076     end_of_initialization 001D        __end_of_segmentos 0237  
        main@adc_value_1 0029          main@adc_value_2 002B                _TRISAbits 0085  
    start_initialization 0013              __end_of_isr 019D              __pbssCOMMON 0078  
              ___latbits 0002            __pcstackBANK0 0020                 ?___awdiv 0074  
               ?___awmod 0074                __pstrings 0227                _conversor 008A  
      interrupt_function 0004                _segmentos 022D               _ADCON0bits 001F  
            __stringbase 022C               _ADCON1bits 009F               ?_conversor 0025  
     __end_of__stringtab 022D                 _centenas 002F                 _unidades 0033  
               main@volt 002D              ??_conversor 0078               _INTCONbits 000B  
               intlevel1 0000                stringcode 0227               _OSCCONbits 008F  
               stringdir 0227                 stringtab 0227  
